| inputlookup bos_signal_status.csv
| lookup bos_services.csv service_id OUTPUT l4_product_line
| eval health_score=case(
    status=="Green", 100,
    status=="Amber", 50,
    status=="Red", 0,
    1=1, null())
| eval status_value=case(
    status=="Green", 3,
    status=="Amber", 2,
    status=="Red", 1,
    1=1, null())
| stats
    avg(health_score) as service_health
    min(status_value) as service_min_status
    count as signal_count
    by l4_product_line, service_id
| append
    [| inputlookup bos_services.csv
     | fields service_id l4_product_line]
| stats
    values(service_health) as service_health
    values(service_min_status) as service_min_status
    values(signal_count) as signal_count
    by l4_product_line, service_id
| eval service_health=mvindex(service_health,0)
| eval service_min_status=mvindex(service_min_status,0)
| eval signal_count=coalesce(mvindex(signal_count,0),0)
| stats
    dc(service_id) as service_count
    sum(eval(signal_count > 0)) as services_with_signals
    avg(service_health) as health
    min(service_min_status) as overall_min_status
    by l4_product_line
| eval coverage=round((services_with_signals/service_count)*100, 1)
| eval health=if(isnotnull(health), round(health, 1), null())
| eval health_status=case(
    overall_min_status==3, "Green",
    overall_min_status==2, "Amber",
    overall_min_status==1, "Red",
    1=1, "Unknown")
| join type=left l4_product_line
    [| inputlookup bos_incidents.csv
     | where status="Open" AND (severity="Sev1" OR severity="Sev2")
     | stats count as incident_count by l4_product_line]
| fillnull value=0 incident_count services_with_signals coverage
| table l4_product_line service_count services_with_signals coverage health health_status incident_count
| sort l4_product_line
